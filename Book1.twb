<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0515.0324                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0515.0324)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='COVIDDeathTrendsDashboard' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='global_numbers' inline='true' name='federated.007vwj515z00vp10nrhrv10h3mk2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_numbers' name='textscan.0dppji80ilzwh010catkc07vxpo7'>
            <connection class='textscan' directory='C:/dev/Coronavirus_COVID_19_Deaths_Proj/jupyter_out' filename='global_numbers.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0dppji80ilzwh010catkc07vxpo7' name='global_numbers.csv' table='[global_numbers#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='real' name='total_cases' ordinal='0' />
            <column datatype='real' name='total_deaths' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0dppji80ilzwh010catkc07vxpo7' name='global_numbers.csv' table='[global_numbers#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='real' name='total_cases' ordinal='0' />
            <column datatype='real' name='total_deaths' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global_numbers.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[global_numbers.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_numbers.csv_BF124791C30A48D1A825A042CBDA5AA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[global_numbers.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_numbers.csv_BF124791C30A48D1A825A042CBDA5AA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_percentage]</local-name>
            <parent-name>[global_numbers.csv]</parent-name>
            <remote-alias>death_percentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_numbers.csv_BF124791C30A48D1A825A042CBDA5AA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='global_numbers.csv' datatype='table' name='[__tableau_internal_object_id__].[global_numbers.csv_BF124791C30A48D1A825A042CBDA5AA0]' role='measure' type='quantitative' />
      <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Sam/AppData/Local/Temp/TableauTemp/#TableauTemp_1x9o8jf142ogwk1428xp00e6yk15.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/18/2024 07:44:05 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>global_numbers.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>global_numbers.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>death_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[death_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>death_percentage</remote-alias>
              <ordinal>2</ordinal>
              <family>global_numbers.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='global_numbers.csv' id='global_numbers.csv_BF124791C30A48D1A825A042CBDA5AA0'>
            <properties context=''>
              <relation connection='textscan.0dppji80ilzwh010catkc07vxpo7' name='global_numbers.csv' table='[global_numbers#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='real' name='total_cases' ordinal='0' />
                  <column datatype='real' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='death_percentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='death_TS' inline='true' name='federated.03qndz41soa2fp14fr7491gub873' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='death_TS' name='textscan.02q89qj1dbwa9c158mlx51jun1vj'>
            <connection class='textscan' directory='C:/dev/Coronavirus_COVID_19_Deaths_Proj/jupyter_out' filename='death_TS.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.02q89qj1dbwa9c158mlx51jun1vj' name='death_TS.csv' table='[death_TS#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='real' name='new_deaths' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.02q89qj1dbwa9c158mlx51jun1vj' name='death_TS.csv' table='[death_TS#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='real' name='new_deaths' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[death_TS.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[death_TS.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_TS.csv_D2A42CBB67224CE7AB81E9314646A2FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[death_TS.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_TS.csv_D2A42CBB67224CE7AB81E9314646A2FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[death_TS.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_TS.csv_D2A42CBB67224CE7AB81E9314646A2FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='death_TS.csv' datatype='table' name='[__tableau_internal_object_id__].[death_TS.csv_D2A42CBB67224CE7AB81E9314646A2FF]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Sam/AppData/Local/Temp/TableauTemp/#TableauTemp_00zc7me0d0grx5118bkur0jowbgt.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/18/2024 08:41:03 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>death_TS.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1203</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>1</ordinal>
              <family>death_TS.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>310</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_deaths</remote-alias>
              <ordinal>2</ordinal>
              <family>death_TS.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1347</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='death_TS.csv' id='death_TS.csv_D2A42CBB67224CE7AB81E9314646A2FF'>
            <properties context=''>
              <relation connection='textscan.02q89qj1dbwa9c158mlx51jun1vj' name='death_TS.csv' table='[death_TS#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='real' name='new_deaths' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='effect_of_vaccin' inline='true' name='federated.1dfbwn51p3mwfo16zk3yd0jxahl3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='effect_of_vaccin' name='textscan.10npoh10nl4ovm1bpm90u1a9vtcn'>
            <connection class='textscan' directory='C:/dev/Coronavirus_COVID_19_Deaths_Proj/viz' filename='effect_of_vaccin.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.10npoh10nl4ovm1bpm90u1a9vtcn' name='effect_of_vaccin.csv' table='[effect_of_vaccin#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='integer' name='tot_cases_pday' ordinal='1' />
            <column datatype='integer' name='tot_vaccination_day' ordinal='2' />
            <column datatype='integer' name='tot_death_day' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.10npoh10nl4ovm1bpm90u1a9vtcn' name='effect_of_vaccin.csv' table='[effect_of_vaccin#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='integer' name='tot_cases_pday' ordinal='1' />
            <column datatype='integer' name='tot_vaccination_day' ordinal='2' />
            <column datatype='integer' name='tot_death_day' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[effect_of_vaccin.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[effect_of_vaccin.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[effect_of_vaccin.csv_53ED2BBB8F85410DAC67E102F22551F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tot_cases_pday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tot_cases_pday]</local-name>
            <parent-name>[effect_of_vaccin.csv]</parent-name>
            <remote-alias>tot_cases_pday</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[effect_of_vaccin.csv_53ED2BBB8F85410DAC67E102F22551F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tot_vaccination_day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tot_vaccination_day]</local-name>
            <parent-name>[effect_of_vaccin.csv]</parent-name>
            <remote-alias>tot_vaccination_day</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[effect_of_vaccin.csv_53ED2BBB8F85410DAC67E102F22551F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tot_death_day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tot_death_day]</local-name>
            <parent-name>[effect_of_vaccin.csv]</parent-name>
            <remote-alias>tot_death_day</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[effect_of_vaccin.csv_53ED2BBB8F85410DAC67E102F22551F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='effect_of_vaccin.csv' datatype='table' name='[__tableau_internal_object_id__].[effect_of_vaccin.csv_53ED2BBB8F85410DAC67E102F22551F5]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Tot Cases Pday' datatype='integer' name='[tot_cases_pday]' role='measure' type='quantitative' />
      <column caption='Tot Death Day' datatype='integer' name='[tot_death_day]' role='dimension' type='quantitative' />
      <column caption='Tot Vaccination Day' datatype='integer' name='[tot_vaccination_day]' role='dimension' type='quantitative' />
      <column-instance column='[tot_cases_pday]' derivation='Attribute' name='[attr:tot_cases_pday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tot_death_day]' derivation='Attribute' name='[attr:tot_death_day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tot_vaccination_day]' derivation='Attribute' name='[attr:tot_vaccination_day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tot_cases_pday]' derivation='Sum' name='[sum:tot_cases_pday:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Sam/AppData/Local/Temp/TableauTemp/#TableauTemp_1rmwx8f1iyr3on1cssini1eiqbgy.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/18/2024 07:43:35 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>effect_of_vaccin.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>486</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[effect_of_vaccin.csv_53ED2BBB8F85410DAC67E102F22551F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tot_cases_pday</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tot_cases_pday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tot_cases_pday</remote-alias>
              <ordinal>1</ordinal>
              <family>effect_of_vaccin.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>465</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[effect_of_vaccin.csv_53ED2BBB8F85410DAC67E102F22551F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tot_vaccination_day</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tot_vaccination_day]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tot_vaccination_day</remote-alias>
              <ordinal>2</ordinal>
              <family>effect_of_vaccin.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>138</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[effect_of_vaccin.csv_53ED2BBB8F85410DAC67E102F22551F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tot_death_day</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tot_death_day]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tot_death_day</remote-alias>
              <ordinal>3</ordinal>
              <family>effect_of_vaccin.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>451</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[effect_of_vaccin.csv_53ED2BBB8F85410DAC67E102F22551F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[attr:tot_death_day:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[attr:tot_cases_pday:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[sum:tot_cases_pday:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[attr:tot_vaccination_day:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='effect_of_vaccin.csv' id='effect_of_vaccin.csv_53ED2BBB8F85410DAC67E102F22551F5'>
            <properties context=''>
              <relation connection='textscan.10npoh10nl4ovm1bpm90u1a9vtcn' name='effect_of_vaccin.csv' table='[effect_of_vaccin#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='integer' name='tot_cases_pday' ordinal='1' />
                  <column datatype='integer' name='tot_vaccination_day' ordinal='2' />
                  <column datatype='integer' name='tot_death_day' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='death_percentage_per_country' inline='true' name='federated.1ovba030u90jzw17vfb8j06q0hqr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='death_percentage_per_country' name='textscan.1447kr018u362m1fr530a0m2agju'>
            <connection class='textscan' directory='C:/dev/Coronavirus_COVID_19_Deaths_Proj/viz' filename='death_percentage_per_country.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1447kr018u362m1fr530a0m2agju' name='death_percentage_per_country.csv' table='[death_percentage_per_country#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='real' name='deaths_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1447kr018u362m1fr530a0m2agju' name='death_percentage_per_country.csv' table='[death_percentage_per_country#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='real' name='deaths_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[death_percentage_per_country.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[death_percentage_per_country.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_percentage_per_country.csv_A5EE3513F4AF47B490B41ECB4C3A5804]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[death_percentage_per_country.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_percentage_per_country.csv_A5EE3513F4AF47B490B41ECB4C3A5804]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths_percentage]</local-name>
            <parent-name>[death_percentage_per_country.csv]</parent-name>
            <remote-alias>deaths_percentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_percentage_per_country.csv_A5EE3513F4AF47B490B41ECB4C3A5804]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='death_percentage_per_country.csv' datatype='table' name='[__tableau_internal_object_id__].[death_percentage_per_country.csv_A5EE3513F4AF47B490B41ECB4C3A5804]' role='measure' type='quantitative' />
      <column caption='Deaths Percentage' datatype='real' name='[deaths_percentage]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Sam/AppData/Local/Temp/TableauTemp/#TableauTemp_0n7jnga18g71oq164pbin1d5p3cf.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/18/2024 07:58:32 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>death_percentage_per_country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>death_percentage_per_country.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths_percentage</remote-alias>
              <ordinal>2</ordinal>
              <family>death_percentage_per_country.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>183</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='death_percentage_per_country.csv' id='death_percentage_per_country.csv_A5EE3513F4AF47B490B41ECB4C3A5804'>
            <properties context=''>
              <relation connection='textscan.1447kr018u362m1fr530a0m2agju' name='death_percentage_per_country.csv' table='[death_percentage_per_country#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='real' name='deaths_percentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='life_expectencyVSdeath%cases' inline='true' name='federated.1qqk5wf0ycjmrz1aumxns0y9q590' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='life_expectencyVSdeath%cases' name='textscan.00qrfr61s2jo4h1fpsjkh0tx9isb'>
            <connection class='textscan' directory='C:/dev/Coronavirus_COVID_19_Deaths_Proj/viz' filename='life_expectencyVSdeath%cases.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.00qrfr61s2jo4h1fpsjkh0tx9isb' name='life_expectencyVSdeath%cases.csv' table='[life_expectencyVSdeath%cases#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='real' name='life_expectancy' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.00qrfr61s2jo4h1fpsjkh0tx9isb' name='life_expectencyVSdeath%cases.csv' table='[life_expectencyVSdeath%cases#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='real' name='life_expectancy' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[life_expectencyVSdeath%cases.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[life_expectencyVSdeath%cases.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[life_expectencyVSdeath%cases.csv_C608B0A89BF1437BB6948817CE92B544]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[life_expectencyVSdeath%cases.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[life_expectencyVSdeath%cases.csv_C608B0A89BF1437BB6948817CE92B544]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_percentage]</local-name>
            <parent-name>[life_expectencyVSdeath%cases.csv]</parent-name>
            <remote-alias>death_percentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[life_expectencyVSdeath%cases.csv_C608B0A89BF1437BB6948817CE92B544]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='life_expectencyVSdeath%cases.csv' datatype='table' name='[__tableau_internal_object_id__].[life_expectencyVSdeath%cases.csv_C608B0A89BF1437BB6948817CE92B544]' role='measure' type='quantitative' />
      <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Sam/AppData/Local/Temp/TableauTemp/#TableauTemp_10dzewt12ow35g125i3ih0wx0wk9.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/09/2024 09:51:47 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>life_expectencyVSdeath%cases.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>206</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[life_expectencyVSdeath%cases.csv_C608B0A89BF1437BB6948817CE92B544]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>life_expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[life_expectancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>life_expectancy</remote-alias>
              <ordinal>1</ordinal>
              <family>life_expectencyVSdeath%cases.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>195</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[life_expectencyVSdeath%cases.csv_C608B0A89BF1437BB6948817CE92B544]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>death_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[death_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>death_percentage</remote-alias>
              <ordinal>2</ordinal>
              <family>life_expectencyVSdeath%cases.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>182</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[life_expectencyVSdeath%cases.csv_C608B0A89BF1437BB6948817CE92B544]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='life_expectencyVSdeath%cases.csv' id='life_expectencyVSdeath%cases.csv_C608B0A89BF1437BB6948817CE92B544'>
            <properties context=''>
              <relation connection='textscan.00qrfr61s2jo4h1fpsjkh0tx9isb' name='life_expectencyVSdeath%cases.csv' table='[life_expectencyVSdeath%cases#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='real' name='life_expectancy' ordinal='1' />
                  <column datatype='real' name='death_percentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_A1A0DC56C8F940E6B9534BE202301800]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 5' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='effect_of_vaccin' name='federated.1dfbwn51p3mwfo16zk3yd0jxahl3' />
          </datasources>
          <datasource-dependencies datasource='federated.1dfbwn51p3mwfo16zk3yd0jxahl3'>
            <column-instance column='[tot_cases_pday]' derivation='Attribute' name='[attr:tot_cases_pday:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tot_death_day]' derivation='Attribute' name='[attr:tot_death_day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tot_vaccination_day]' derivation='Attribute' name='[attr:tot_vaccination_day:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='Tot Cases Pday' datatype='integer' name='[tot_cases_pday]' role='measure' type='quantitative' />
            <column caption='Tot Death Day' datatype='integer' name='[tot_death_day]' role='dimension' type='quantitative' />
            <column caption='Tot Vaccination Day' datatype='integer' name='[tot_vaccination_day]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[attr:tot_death_day:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[attr:tot_cases_pday:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[attr:tot_vaccination_day:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[attr:tot_death_day:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[attr:tot_cases_pday:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[attr:tot_vaccination_day:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[Multiple Values]</rows>
        <cols>[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[none:date:qk]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.0afh7zk0kp9ggr1bi8jqu1g0luxg].[__tableau_internal_object_id__].[cnt:total_cases_per_day.csv_40672ECF2B624C5889CD6CE68A3B8A3D:ok]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
      <simple-id uuid='{56D3EFA5-F251-4924-9556-476C479C02F4}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global_numbers' name='federated.007vwj515z00vp10nrhrv10h3mk2' />
          </datasources>
          <datasource-dependencies datasource='federated.007vwj515z00vp10nrhrv10h3mk2'>
            <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
            <column-instance column='[death_percentage]' derivation='Sum' name='[sum:death_percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.007vwj515z00vp10nrhrv10h3mk2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.007vwj515z00vp10nrhrv10h3mk2].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.007vwj515z00vp10nrhrv10h3mk2].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.007vwj515z00vp10nrhrv10h3mk2].[sum:death_percentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.007vwj515z00vp10nrhrv10h3mk2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.007vwj515z00vp10nrhrv10h3mk2].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.007vwj515z00vp10nrhrv10h3mk2].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.007vwj515z00vp10nrhrv10h3mk2].[sum:death_percentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.007vwj515z00vp10nrhrv10h3mk2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.007vwj515z00vp10nrhrv10h3mk2].[:Measure Names]' value='119' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.007vwj515z00vp10nrhrv10h3mk2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.007vwj515z00vp10nrhrv10h3mk2].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{9D55776C-FB71-4AA0-A87B-8EB77BAF76A3}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>death Percentage per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='death_percentage_per_country' name='federated.1ovba030u90jzw17vfb8j06q0hqr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ovba030u90jzw17vfb8j06q0hqr'>
            <column-instance column='[deaths_percentage]' derivation='Attribute' name='[attr:deaths_percentage:qk]' pivot='key' type='quantitative' />
            <column caption='Deaths Percentage' datatype='real' name='[deaths_percentage]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ovba030u90jzw17vfb8j06q0hqr].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_A1A0DC56C8F940E6B9534BE202301800]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ovba030u90jzw17vfb8j06q0hqr].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ovba030u90jzw17vfb8j06q0hqr].[Longitude (generated)]' field-type='quantitative' max='36985139.480790094' min='-36828577.787832409' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ovba030u90jzw17vfb8j06q0hqr].[Latitude (generated)]' field-type='quantitative' max='12877508.617147759' min='-7171318.3008939512' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ovba030u90jzw17vfb8j06q0hqr].[attr:deaths_percentage:qk]' value='Deaths Percentage'>
              <formatted-text>
                <run>Deaths Percentage</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ovba030u90jzw17vfb8j06q0hqr].[none:location:nk]' />
              <color column='[federated.1ovba030u90jzw17vfb8j06q0hqr].[attr:deaths_percentage:qk]' />
              <geometry column='[federated.1ovba030u90jzw17vfb8j06q0hqr].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ovba030u90jzw17vfb8j06q0hqr].[Latitude (generated)]</rows>
        <cols>[federated.1ovba030u90jzw17vfb8j06q0hqr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DE8353C7-8E24-4913-9CA2-1B0D41176304}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID death trends in the middle east over months
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='death_TS' name='federated.03qndz41soa2fp14fr7491gub873' />
          </datasources>
          <datasource-dependencies datasource='federated.03qndz41soa2fp14fr7491gub873'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[new_deaths]' derivation='Sum' forecast-column-base='[sum:new_deaths:qk]' forecast-column-type='forecast-value' name='[fVal:sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03qndz41soa2fp14fr7491gub873].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Arab Emirates&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.03qndz41soa2fp14fr7491gub873].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03qndz41soa2fp14fr7491gub873].[none:location:nk]' />
              <text column='[federated.03qndz41soa2fp14fr7491gub873].[none:location:nk]' />
              <color column='[federated.03qndz41soa2fp14fr7491gub873].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03qndz41soa2fp14fr7491gub873].[fVal:sum:new_deaths:qk]</rows>
        <cols>[federated.03qndz41soa2fp14fr7491gub873].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{D742853F-69C7-43FC-BF28-BE967707FAE9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98170' id='8' param='horz' type-v2='layout-flow' w='98982' x='509' y='915'>
            <zone h='98170' id='6' type-v2='layout-basic' w='88810' x='509' y='915'>
              <zone h='49085' id='5' name='Sheet 4' w='88810' x='509' y='915'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49085' id='10' name='Sheet 5' w='88810' x='509' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98170' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='10172' x='89319' y='915'>
              <zone h='7437' id='9' name='Sheet 4' pane-specification-id='4' param='[federated.1ovba030u90jzw17vfb8j06q0hqr].[attr:deaths_percentage:qk]' type-v2='color' w='10172' x='89319' y='915'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='25858' id='11' name='Sheet 5' pane-specification-id='0' param='[federated.03qndz41soa2fp14fr7491gub873].[none:location:nk]&#10;[federated.03qndz41soa2fp14fr7491gub873].[none:Forecast Indicator:nk]' type-v2='color' w='10172' x='89319' y='8352'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='16819' id='3' name='Sheet 3' w='24539' x='1017' y='30092' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98170' id='20' param='vert' type-v2='layout-flow' w='98982' x='509' y='915'>
                <zone fixed-size='280' h='49085' id='5' is-fixed='true' name='Sheet 4' w='88810' x='509' y='915'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7437' id='9' name='Sheet 4' pane-specification-id='4' param='[federated.1ovba030u90jzw17vfb8j06q0hqr].[attr:deaths_percentage:qk]' type-v2='color' w='10172' x='89319' y='915'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='134' h='16819' id='3' is-fixed='true' name='Sheet 3' w='24539' x='1017' y='30092'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49085' id='10' is-fixed='true' name='Sheet 5' w='88810' x='509' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25858' id='11' name='Sheet 5' pane-specification-id='0' param='[federated.03qndz41soa2fp14fr7491gub873].[none:location:nk]&#10;[federated.03qndz41soa2fp14fr7491gub873].[none:Forecast Indicator:nk]' type-v2='color' w='10172' x='89319' y='8352'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8ED36343-5774-4B93-B9B5-3CD7A4730D44}' />
    </dashboard>
  </dashboards>
  <windows source-height='114'>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.1dfbwn51p3mwfo16zk3yd0jxahl3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{AE0EDD34-19DF-4603-BC6C-93D592EE7A70}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.007vwj515z00vp10nrhrv10h3mk2].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3DA81AC2-03E3-43DB-8A1A-76C79D76E6CD}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1ovba030u90jzw17vfb8j06q0hqr].[attr:deaths_percentage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ovba030u90jzw17vfb8j06q0hqr].[attr:deaths_percentage:qk]</field>
            <field>[federated.1ovba030u90jzw17vfb8j06q0hqr].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{9F369537-ED72-4D2C-9C83-E889625A103C}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03qndz41soa2fp14fr7491gub873].[none:location:nk]&#10;[federated.03qndz41soa2fp14fr7491gub873].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03qndz41soa2fp14fr7491gub873].[attr:location:nk]</field>
            <field>[federated.03qndz41soa2fp14fr7491gub873].[none:Forecast Indicator:nk]</field>
            <field>[federated.03qndz41soa2fp14fr7491gub873].[none:location:nk]</field>
            <field>[federated.03qndz41soa2fp14fr7491gub873].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5E428DA-4FF6-485A-A864-0D1AC5F2BBFF}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 3' />
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.03qndz41soa2fp14fr7491gub873].[fVal:sum:new_deaths:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.03qndz41soa2fp14fr7491gub873].[none:Forecast Indicator:nk]</field>
              <field>[federated.03qndz41soa2fp14fr7491gub873].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{BF8FB133-857D-40EA-B4AD-653F81B38C90}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='44' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deXQcx33nP9Xdc89gMDgI8AYI8BIPSaRkUbIOS7Js2U4sx7a8OezNsZs4
      jvMSZ53TySbrjdfedTZ5u06ceLM5du14Yzs+ZMeHLNmSdV+mKJIgCQIgcRPnYGYwZ19V+8eQ
      lCiCBAYYkACnP+/hAZiurvp1T3+7rt+vSiilFB4eNYp2tQ3w8LiaVEUArutWIxsPjyuOVwN4
      1DSeADxqGk8AHjWNJwCPmsYTgEdNYyw0YU9PN20bN3Cyt4+6xjUEEQTrE8QjweW0z8NjWREL
      nQibmpogIMGKBJkcHCSVtrn1tn0oKZFSIoRYbls9PKrOggXQc+IokXgzucwMjWvXERQajmZQ
      Hwvjui66ri+3rR5VwDr0RfTNt6E3tF9tU1YEC24Cbdu5p/zHutblssVjmZG5SawXPofftTwB
      nMXrBNcQ1qEv4LvxA7hT3VfblBWDJ4AaQeamkJPd+G/4GVRuAs8HsowngBrBPvwlfHseRARi
      iEAdqpC82iatCDwB1AAyn8QdP4zRcTcAWtNWZLLvKlu1MvAEUAPYR76Mb+cDCN0HgNa8E3fy
      +FW2amXgCeAaR5lZ3OEXMbbff/4zvWUX7ujLV9GqlYMngGsc6/CX8O161/m3P4CINIGZQyl5
      FS1bGXgCuIZRZg63/0mM7W+/4HOh+xCRJtTs2FWybOXgCeAaxjr8z/iuexfC8F90TGve7s0H
      4AngmkVZeZzTT2Ds/Ik5j+ute5BeR9gTwLWKdeTL+La/DWEE5jyuNW3DHe+6wlatPDwBXIMo
      K4/T+wN8u999yTQiGEdZeZR0rqBlKw9PANcgdtfX8O14B8IXumQaoelo9ZuQ6aEraNnKwxPA
      NYay8tg9j+Db/VPzptVbdyMnarsfUJEA3FKOo11H6R8eZnzkDJl8abns8lgkdtfX8G17K8IX
      njet3roXd6K2+wELjgcAUFLiOA6lYp4zU3kOrF+L67pIKT3vwpWAXcDufZTAOz+L4yygbR/f
      hDvdt7C01ygVCUD4/ISDQerqG9nYuo5srkh9rPym8SLCrj7Wse/h67gHI1S3oPRKj4FTRMe9
      5GjRtU5FAtB9Qbbv2LlctngsAeWYOD0PE3rnZxZ8jhACvWkbMtmH3rJrGa1buXid4GsEd+wI
      WkM7IhCr6Dy9dW9Nzwd4ArhGcHq/j2/nOys+T2vdU9MdYU8A1wDKLiJTg2iLaMZoDe2o9NCK
      9gxVVgHrx/+4LHl7ArgGcAafRW/de4HL80IRmg5CB8dcBsuqg0z1Y73yRZSs/jL8ngCuAZye
      hzG2vWXR52trduBOHKuiRdXFnepBlWZRpXTV8/YEsMpRpVlUYQatsWPReeite5AruCMsp0+i
      1W9G5SarnrcngFWO0/8kxpY3IbSKRrQvQG/ZjTt1onpGVRmZHsbYcuey+C15Aljl2N3fwei8
      d0l5iPgGVHZiRXqGKqcETgm9ZTcyNVj1/D0BrGJkdhykg4gtbblKIQT4IygzWyXLqofMjCJi
      axGJNmRmuOr5ewJYxTh9Pyy7PYulf436mh3IsSNVsKq6yKlutIYtaOEGVG6q6vl7AljFOP1P
      nF/saqnoLbtX5FpB7uQJaGhjqO87YBeqPhTqCWCV4s6cRvhjEFiY49t8aM3bkVMnq5JXNZGp
      AbLK5NQrf4/yh1HFVFXz9wSwSnF6vo+x7b6qbUyi1a1DlTKoFTQhpqQLZo5kshuEwDYCqGx1
      l3LxBLAKUUriDD6L0XZHVfMVkeYVtWiuyo5DpIn05FHWbLqLopDIzEhVy6hIAMot0dXVxWRy
      yosIu4rI6R70hg6EP1LVfLXm7eU29wrBne7BDtXhDyZoaN1HAQeZGqhqGRXNnljZLCUpSSWn
      mJ4qehFhVwn7+LfRO+6teiSXWLMLp/9JRNtdVc13sTgTx0lbs8TXXU+oro0paeOmBqt63RUJ
      wB9vIBGcIZxoZEOrn1yuSNyLCLuiKMfEHHmJ4B0fWdLs71zIpq04L/8fDKO6+S4Wa6qbGbJ0
      rD9AMNKCpWwozlTVvspCIoVOx7btVSvco3LcM4fQ1+6t+sMPIMIN4Jgoq4Dwzx9Uv5woJZGF
      aayIn2h9O0LTcQF5dlHfasx9gNcJXjaUdCh+6zewT36vqvk6PY/gu+6BquZ5DiFEea2g2TPL
      kn8lqFKGbH6McLwNTfchhEYwugYLB1WYqVo5ngCWCaf3UUS4CfvoV3Gne6qSpzJzyFQ/Wst1
      VclvLrQ1O1bEmqFy6iRpM03zpldHusLxNgquiaqiQD0BLAPKymMf+TL+236dwN0fw3zsE6hS
      Zsn5OkPPoa/fX7Xqfy70lt2440eXLf+FIidPkDd0Eq37zn8WS3RQUFZVR4I8ASwD1qEvYmx9
      K1q4Ab2xA9+NH6D02H9BycWHHSqlzk5+vbWKll6MVr+Z3ODTTA09tazlzIc71Y3WvAN/sP78
      Z9FEB3lpVdUpzhNAlZHZcdyh5y9YmNbofDNa3XrsQ19YdL6qlEZZebTGzmqYeUls5eJYWU6/
      9Fe4ztWb57EmuohvvuOC2i4YacXyBb0aYKWilMJ6/q/x3/xLFyw0JYTAf+uv4Qw+izN6cFF5
      u6efwNj8xqq5PlyKkZ6HMP0hGiJrGe7+2rKWdSmUmSWbHaVhw4ELPjf8EWQgipsdr1pZngCq
      iJw4hirNom++7aJjQvcRvP+TmE/8GbJCt16lFPbJ72J0Vsfz81I4doGpoadoufUjrA+tZfz0
      o1hV6LtUipvswwrGqGu8cBE2ITTC9W2UZoertoqFJ4AqoZTEfPYz+G/7jUt2UrVwI4E7f5vS
      o/9xwU5nzuhBit/4IPrGWxCxddU0+SLO9H6b5o23E9hyF4x3sWnng5w69L+Xtcy5kFM9+Dfc
      hKZfvLVTpL6dvJWp2lCoJ4Aq4fQ+itbYidbQftl0xoabMLa8CfPZz1zWfUSmhyg+/AfYR/6F
      wJt+H/9Nv7SszR/p2oz2fpsNO96D8EfRmrezJrKe7EwPhdnRZSt3TlsmTxBuu3PO640mOigq
      p2pOcZ4AqoCyC1gvf4HAGz64oIfUt/d9qMIMTu+jF+dVmsV87rOUHv8kvuseIHj/J9Ebtix7
      239i4Ic0rT+APxgHwNj6Vpy+H9C5/1fpeWnh640uFaUU9nQ34Q23zHk8muigKEClqzMS5Alg
      iSilsA59sbwfVyi+oHOE0Aje/THsI1/CnSpPkinHxD7+TYr/+ptodesIvfMvMTYdWNYx/3Mo
      JRnu/jobr3vw/Gf62j3IieMkmveglEt68grNDbgm0rUJRNfOeTgUXYsdiCJTp6tSnCeAJaJy
      E7gDT+Pb++D8iV+DCMTKk2Q/+hTO6ScofvPXkakBQj/5P/Ht+qlFrfK2WKZHnicSbyMQanrV
      PiOI1rQVOXGMbTf/Bj0v/eWyrMz2epzJbvxrrrtkjacZAbTEJmSmOs2ya0YASqkr7pKtlMR6
      /m/K7fM5OmzzoTd24rvxAzinHiN438cJvPE3EcHqhDguFKUUA0e/QNue91/00Blb78M+8W3C
      dRuJ1rczMfijZbenMPAE+ppLu3oIoeGvb8dO9Vfl+65YANJ1caVESYlcwsxmtXGOfxPzyT9D
      udYVK7M87JlGb79z0Xn4Ou8heN/H0eqWd4TnUmSmuvCHEoTrNl50TF+7txwoLx0693+IgaOf
      x13GkEmlJMWRF9Hn8XWKNHRSzFRnjaDKBKAU3YcOMjA2Qt/JU+RK9nkVnnsDX5Uf18Y+9g1E
      IEbx2x9FFtPLX6Z0MJ//HP4DH77617+En4Guf6J978/PeQ1ovrIIhl/EF4izZvObGD7xL8tm
      i11Ko2ZOozV2XjZdNLGFolNAFaaXXGZFTuWlbJJUrkQkM4uTc9hoGMgVUBM4A88h1uzEuPlX
      0AafofDQhwnc96doic3LV2bvD9Dq1kNDx1W//sWSS/fjmHki8Utfg955H9axbxLYeIANOx7k
      4MO/RmvH2/EFFtbhr4TpoWcJhdcg9SBc5p6G41uYEeAkB9CDDUsqsyIBBOuaOPDGA1hSYggd
      Wzro/vKU/9WMCLNOfgf/Lb+CruvoW+5Eq1tH6dE/JHD7b2FsfEPVy3OnunFe+QLhBz6LWKWR
      cEophro+z5YbfgH9MhFW2rrrsZ74b2hI9ECUtt0/y8CRf2THgY9W3abCmRdJtOye91mK1K3H
      DkZhdhh9081LKrPiPoDu8xMKBPH5fYSDV39jNTk7hrJyaIlXJ6D0pk5C7/prrBf/N9bRr5Wr
      82qVlx7GfPxTBN/yCUSofv4TViil3Bil/CSJ1v2XTSc0A6P9TtzhFwBoaX8zs8mT5DPVXahW
      uhbmyEvoC3D2E5qBlmhDpZfeD1j1o0D28W/i234/QrvwUrRQgtADf4mc6MJ86i9Qrr3ksuTs
      KKVH/ojAPX+IPs+M70pn6MRX2LTrpxc0wWZsfxv2ye+ilELTDDr3fZC+lz9X1RdLPjOElhlB
      WzP/JoxCCIyGDmQVJsNWtQCUa+MOPYfRMffqyMIIErj3P6KFGyh97/eXFJQiC0lK3/8j/Ld/
      BL1p26LzWQmYxRnSE4dp3nCx095caA1bUJkzcNY9OtG6DyVt0pOHq2bT9PDTRIVvwfsc+Bs7
      sauwtdOqFoA7+Az62hsuG8AthIb/pl/E2PE2iv/6W4vyJVfFNKXv/i7+Wz+Mse7GJVi8Mhg+
      /hXWb3/XnM5mcyGEQN90C+7wi+f/37r/w/Qd/ByyCsPOSilmzrxIJLoOLdK8oHOiiU4K2VFY
      4uTcqhaAdfSr+Ha9a0FpfZ1vJnDX71B6/JOYL/wtqriw7XaUXaT4vd/Df+MHMDbctBRzVwS2
      mSU59hJrt1S2pZKx9b7zzSCASH0bjesP0H908UE+53CsLM7sCKHGhdessUQHRTu75LVCV60A
      ZGYElEIk2hZ8jr5mJ6EH/goRbqDw0K9hvfz5y7olK7tI6eGP4dv9bvQtK2OxqKWglGK055u0
      tN2LboQqOldv7Cy7H7xmD4G23T/HzJmXyM4sLeg/PXGYqNLRmncs+JxQbB12IIJcYkd4VQpA
      KYV9/Fv4dr+7Yi9Jofvx73kv4ff+PQiN4jc+iN39nYt2R1GOSenRP0bffBu+bW9ddm/MK8HU
      8FNMjz7Pxh3vnj/xHBjtd+L0P3n+f033sePARznx7KeRSxhkSI69RGOwGX3NwgUAYDRuXXJ4
      5KoUANLFGXgao+32RWchfCH8N76f0E9+Bneqm+K//CLOqcfPzvK6mE98Gr11D/4KndxWKunJ
      Lk4f/kf2vukT6EZwUXkYnffg9P3ggtGfWMNWGtffwsAim0JKuqQnjhBx5QVD2QtBb2hf8kjQ
      ylgDr0Kc0z8quwobS5+HEME6gnd8FJmfxnrxb7G6vooI1KEl2vDv+7dVsPbqk0v30/3cn3H9
      PZ+6YJWFStEbO8tLqJfSiFDi/Ofte3+BF7/zyzRvvotYorLdKou5MQKBOFpxBlGhP5S/aQdy
      4IWKznk9q64GUEphd30N3573VDVfLdJE4E1/QPDO38VouwP/G365qvlfLczCNF1P/meue+Mf
      EKpCSKXRcTdu/4VLpmi6j123/xHHn/4vSLnwppCUDqde+Xua11yPFkqUN+2uAF/DFuzM0uKD
      V58A0kMII1D2w6n0XCUp5ScueVwIgZbYjG/H269IIMpy41h5Dj/+Mbbe9CHqmiprX18KY+tb
      cE4/ftEkWDTRQdOG2xg4+sUF5eM6Jsef+RThug20Nu1Ca9hSsS2R+jaKhekl7XK/6r5l+9g3
      Fjz0+XrO9H6H5x56P7l0f5WtWnlI1+Lwjz7Gpp0P0rB2af4yr0WLtaIcC1WYvuBzIQTte3+e
      qeGnyc70XTYP1y5y5PGPEU10sOX6X0JOnkBr2VWxLcFIK45QCx7SnotVJQBlFXBGD6JvurXi
      c21zluHur3L9Pf+VY099AscuLoOFKwMlXY4980ma1h2gpf3NVR/BMtpuxx14+qLPNd3Hzlt/
      l+7n/+ySE2SOnefwj/6Q5k13sHnXzyCEwJ3uWZAP0Osp19jtSxoKXVUCcPqfxNh826I6v6df
      +Qc27ngPDWv3s2H7A3Q/9+klT6OvRJSS9B78GwKhxgX7+lSK0XE3zqkfzekLVNe4jYa1NzHQ
      9f8uOmaV0hz8/m+wrvPtrN/2AEIIlJKo7ASibu4Y4PnwNW1b0lKJFQfEmKUS7tkYgCvpB6+U
      xD7xr4taGjyX7iebOsXazrcBsG7rT4DQONP77WqbeVVRSjF0/CtYxSSd+z+0bHMXWqwV5VqX
      3LCube/PMz3y7AVNoVJhild++Lu07/15WtruPW+bKqZBaIhFDs3qjR3ImYFFnQsVCkC6NmdG
      B+ju7ePUyVPkTef8W2C5I5dk8hToPkRsbWXnSZeeFz9D575fQQjjrL2CHQc+ynD318mmTi27
      7VfiR7o2E/0/YHr0eXbe9vsIoS9reUbHPdjd30VJ96JjmuZjxy3/ge7n/zuua1GYHeHQo79N
      574P0bzxjgueF5nsQ0u0L9oOX0MHbmZo8dcx14NemE1zZnyclk2dxIKvJhEohBFlfaOfvt4z
      bND1K1YTmEe/hrH7vRWXNTH4OP5QI9GGnRecK7QAu27/Y44+8SfcdP/foPsqcw24WiilcKxZ
      cqnT5FKnmE12k88MId0SdQ2d7L7j4yCMZf9O9K1vwXry0+S+9H70zW/Et+1+tEQbnH2zRxJb
      SbTu58Rzf0422c32W36LePOe8n5y0sUdPYjd9XVEfgL/Xb+3aHu12AaczCjSdWARI3dClV+J
      FzDS3cWRoUG277iVjk2vhpy5tsnpgQESTa3UR8LYUhIKBnBdd9ERYTI/jZzoumwa5TrYr/wT
      off8XUVbA7lOiRe/8yvsu+/PCYTn9jIcO/V9poafZs9dH69o6FNKhaZdGfcIq5RmoOufyEx2
      4TolDF+YaEMn0fp2Yg3biMTbMKq8Y+RCUVYeZ+BpnJ6HkdlxjPY7MLa9Db2hHde1OPnCX7Bp
      5/uI1LcjU/3Yxx7CHXkJfd2N+Ha8A+0yS6AsqHwlSX3+nSR+5ksIf7Ti8+cUwJne4/RMZrjh
      +hupj87fNluSAGb6sft+OG86fcP+ilyRlVKcfuXvMXxhNu/+2cumO/7Mp4g1bmPTzvcuKO+J
      VI6/+PLztCQivP8te1mTWL6Hb3LwCU4d+ju23PCLNKy9GcMfWZFzFEopsPI4/U/i9D6CMrMY
      W+5C33gAd+QlnN5HELFWfNvfgb7plqrM4p8j/bV/R929/wmt/uKVLebjIgHYZo6nH3sCFYmz
      Z+8+muvn3yxtKQJYLoq5cQ4//ge84e1/izbPIlOuU+Lg93+TbTf/OvVr9lw27Wze5NP//Awf
      eMteLNvlS48dY//2tfzErdvw+6p3Dxy7QN/Bz2EWp9lxy0cJhBurlvdyo5QCM4sz8BTuyEG0
      ll0YHXcjQoll6ZjnHvsEwS13Y7S9seJzL3qV+AIhipkMplXAtJZ/JbDlQClFz4v/k237Pzzv
      ww+gG0F23/FHnHzhL7BKl55UKZRs/vzLz/Hgm65j+6Ym9nS08Ce/cBc+XeOP/+FxXukdZ44K
      tWLbM1PHeOm7v0o00cHeu/50VT38UB6fF8E6fDveQfDNf4x/z3vQwg3LNiqlN21b9FzAHHWp
      zv4D+7FyJQz/qvSVIzV2EKUkDesWHsASrtvI5t0/x4ln/9ucSwCatsNfff1F3nzTFq7vbD3/
      ud+n85Nv3M7v/PRtPP7KAP/jX15gMpVflN3Steg/8n/oe/lv2fumT7Bh+wMV+8fUIkbj4uOD
      52xMCt1POOzDMau7E/mVQLoWPQc/y/Y3/GbF57a03Usw0sKpV/4Oq/RqpJErJZ/75kH2bFnD
      7Xvmbmc2xsN85L238Ob97Xzmay/wjadOYNoLv3/5zBAHH/kI0rW48b4/JxLfVLH9VwqpFNmC
      yXSmgOVc/VaCHt+IvMScxHzM+Yp3rTxSGVjW6hPAyMmHaFp3y6I8H4UQdO7/EIPH/plXfvh7
      aLqfRMs+Hhu+jtb6IPff0nnZalwIwZ6OFrZvbuI7z/bw8X98ggfvvo7rO1vR5jivPH5vMn76
      EUZ7vnV2qLByn5jlRCmF7Ugm03m6B6fpHZ1hLJlFAJGQn5nZIk3xMO1rE2zf1MiWtQmCAWPO
      610uRLgBmZ9CSafiDcQvHgVSipG+ozzyTBfvft+D1Ifnb0OvlE6wWZjm0A9+m5ve9tcYvqXv
      dF4qTPP5h75F1gpwa/33iDV00rzhdhJr9yONAJrQMTQdTehzCmM6U+DLjx1jNl/ifXfvpDVa
      JJc+RT7dTyEzRDF3BunaxNfsoePGX8a3iGG85SBfsjgxME3f6Ay9IzOULIfm+jBbNzSyfWMj
      G9bUETzbPJZSMZXJ0zcyw8nhJIPjGRxX0ra2ns71DWxd30AoUE7ruBL5usdNKoVpueSKFrmi
      Rb5kkS2U/y6UbIqmTb5kE/Qb/Lt33EgiNvd8Te6rv0To7f8dPVzZSnEXCaCQHuP7P3qZeEiy
      efcddKyfP4BiJQhASZfjz3yK5k13sGbz0uN3XSn59rO9jM/k+Pc/cSOagPTUMZ5/5fMcmzqJ
      bNqDZeeI+SPUBesJhhqRronPNYkJMJBomkEpP8GJ00McTl7HJm2KW7Y30rqhhfrGbUTrNhIM
      xgn7wviNAGUJiasSfqmUYmRqllf6JugdTrKuKcb2jY1saonTGK/sZVKyHAbG0/QMJ+kfS1E6
      O5ji07WLrk3TBEG/QSToIxb2Ewn6iYb9RII+oiE/oYCPSNBH/1iabz1zknfdsYNdbc0X5VN8
      +GOw9z2E1l1+oa/Xc5EAHKtIT88pJIK2jq1EQ/MvnXG1BKCkS352mNnpE8yM/RjdCLLz1t9Z
      er5K8X8fPozfp/Ozb96DVJLnB57hhz0Ps7V5B2/d8Q4Sc7xppJLkzCwzhSTJ/DSpwgwFu4Aj
      HVzXwbZ8nBlYw/OnD9K5Ncem1jps16JgFbDPek8qFGF/hPpQgrpgnPpgPfFQPfWhBjbWbyIS
      qH4tMT6T4/PfP4xpufzcfXvYsi4x/0lXAdNy+Jtv/pjm+jA/fe9u9Ncshmb++B+wDT/RG95f
      UZ5zToSlp8boG55gx87rVowAXKdEYXaY7EwvmckuculTuI5JuG4D0UQH8abrSLTuW9Cw5+Ww
      bJdvPXOSVK7EB956Hc8NPMWTpx5j77obuW/724j4o0ucuVScOpPin3/QxZr6MA/evYuGulDZ
      N4Wyf0rRLpAupkgX08yWMmRKaVKFJMPpIYpWgaZIM+1NnbQl2tmUaCO2yD0FkpkCDz19kpGp
      Wf7NPbvYvrFxxQf/S6n4yuPHODOd5dd+6ubzTTGn7zFyg09Rf++fLDwv155bABMDJ3nypWPc
      ed/9tCzzRFhy9AX6Xv5fwNzj52XzFELohOObiDVsI968i2iiA8MXXvSsaMlymEzlOTOdZXAi
      w/BkhkzexJWSzg0xWjZN8NLQs+zfeDN3b30LEX+kqg+HVIqDJ8/w0FMnaW2IEAn5iYX8hII+
      YiE/4dc0AYJ+g6DfIODT0XVFsjDNqeleBpKnGEoNYLkWa6ItbGpopy5QR8gfJuQLETSCBH0h
      /HqAgBHAp/sJGH6KpuQbT56gq3+Kn7pzB2/Ysf6KuXVUA6UUTx0Z4pGXTvFb77uVxroQ7nQv
      Z771QWbaDyBdExS452ISzrq9KyQohXQtlHIRQp9bADPjAzz1/GFuues+WhPLKwClys5RXOLh
      EoizxxbXNi6aNtOZAqNTWYYmMwxPlB90qRQNdX5CYZtI1MEXylKSKTJmktlSmhs33MQ9295K
      ZJl9bGzHZXwmR75kkyuUO4H5kk2hZJ/vFJqWS8lyMG0X03bQhMDQNQxdQ9cFSrjk7RTThVFK
      ToGC9WqIoECgn+2o60JDEwYRsQ4ncpytbX6iwTDxYLm5FQ3EqA/VUxeM0xxdQ12w+kugV5Pj
      A1P834cP86sP7KetXpD9ygeQ6/eh+aOgaei+KAhRdrvQdITmA81AKImQDkK6cwtgoOsFnjrU
      x8133M+OtvlnIa9EE0gphZQKqRRKlTupSpXfpOf+zhUshqcyDE/OMjSR5sxMEss1MfwW4YhN
      LCaJRC0slcGSBRSSWKCO5lgLrbG1tNatoyXWSixQh+8K7tFVCefug+NKHClxXIltS0qWQ75k
      oRT4jEvXikIIWhsjCM3BcixKTolMMUWmlCFv5kiX0qQLM5yZHSFgBNnWvJMbNuxnbd06jAqH
      GKVS2K6DXzeWrWk1lszy2a+/xAO3b2df/TSqmC7vEqQkuDYoiZJ2eQlF6ZQ/13wIww9GaI5O
      sJnn0MuH6Osf4d53PMCa+PxuwksRwKG+Eb702BEAbNc970rgvMbP3HbLowhSOSjlIlFIZaOQ
      SOUilYtCYpMnECoSDJeIRB3WxOuoD0eJBetIhBtIhBpIhBvPPuQxgqvEBfpqoJQiVZyhe+IY
      h0Z+TKqYYm3dOm7ccBOdTdsQIkDBsskUi6SKBVKF8k+ykCNnmhQsi5LjYGgatusS9vupCwZJ
      hMO0ROtojkVpikRpCIfx6zq6BrZrYzkmeStHppQhZ86SM3NkzVks12Jj/WY21m+iKdJM6DXr
      wc7mTf76oZfYuCbO+ubY+RoSwNA1NCHQNHFBp1nTyscuEoDrmPz4+efJWoo33PpG6kKveRMq
      yfDQEA1rWjAQuEIQXqI79FjmDEdHjwOga9p5I326AQI0oZ2/GEH5uBDa+beRQEM76y4QNIIE
      jQiGHsB2IWeWyJoms6UiOdNitlSkYNsYZ8s591sXAkMvNxF8uoYmNAKGgaFr+DSdgGHg03V8
      uo5f1/HpBn69PPbvO3vdQpxtrsH5SaBzL71LuQeVO74LRyqF5To4rsR0bEzHwXJdLNfFdGzc
      sz71QgiM17hQ+M/b+Kq9KIXlzj2LK5Uia5bImSapQoFMqUi6mKd3qhfBFE3REsLRVD0AAAsH
      SURBVOmiTaqgIVX5/iRCYRLhMI2RCNFAgLDPT8jnQxMCy7VJFWaZyKWZzs0yU8gihEQX4DcE
      iVCIsD9AMl8kZzpYroYjDWxXJx6MszbeTCwQIl2YYDI3gqHZtNbV0dHUzvr4BtobO2iOrOXl
      7inyJQdXyvOtgnNzD+Va89W7rVS5Fr1IAGYhxbPPvYI/GOC66/eReI07tJmZJmlJUpMT5HMu
      N9y0Fx2F4zi4Z2+mpmnn39xClNvt54IddF2/KN2xiTG+evTIqzdfStxLPDHnKlH1uv9RqtzW
      O/u3DkSDQSI+H7FAkPpwhIjfR8wfIBII4CiF7ZRvFEJgOTa2K0GA5bi40i3/VoqSbWG55b9N
      2y4/gLJctbtSYrsumqbjylevSypVtknTEICSEhDlY2fTCU2DCu6TUgpNCAKGD01AwDAI+wPo
      Zx/qoM+H72yAkgIknM/DVar8uVI4Up4vy28YaJp2Pp2u60gl0dGIBgPEgkHqA0HioRB14TBB
      3SDk82HoOqnCDGOZUSzXujiPs2VpZ19mmtAJGkFC/hBCCQzdR9AfxBAGumbgN/xoQsNxXWzX
      xZIuBdOkYNmYrkPONMmWShRsi6LtkCkWKDlFTHeWojmJJdNoWgG/r3zvBeXhZOc1QTbOJVaR
      nrMPcCmc4ixHT/YRrqvH70J9ayuJWHiJneALDdXEhVWVh8dyUpEALsVKmAn28FgM3qvWo6bx
      BOBR03gC8KhpPAF41DSeADxqGk8AHjWNJwCPmsYTgEdN4wnAo6bxBOBR03gC8KhpPAF41DSe
      ADxqGk8AHjVNRQJQ0mWw/zSZXA6zWKRQWvz+rB4eK4EFxwMoKbFti1w2TTKTJTWd44abrken
      HG200teT8fCYiwWH+buORWpmir7+UTZuXk9zg06+UCIRKwcnewExHqsRLyLMo6bxOsEeNY0n
      AI+axhOAR03jCcCjpvEE4FHTeALwqGk8AXjUNJ4APGoaTwAeNY0nAI+axhOAR03jCcCjpvEE
      4FHTeALwqGkq2/YPGBvsR6+L45egBcPURYLzn+ThsUJZsAAcs8D45DTJqRQRJBMjaW69bR+u
      657fE8rDY7VRUUCMbRYZ7B9ARCLE/UH0cHTJe4R5eFxNvIgwj5rG6wR71DSeADxqGk8AHjWN
      JwCPmsYTgEdN4wnAo6bxBOBR03gC8KhpPAF41DSeADxqGk8AHjWNJwCPmsYTgEdN4wnAo6ap
      KCJMSYfenl4aWloxXIkWingRYR6rmooiwkYHh8iYFkYmydhoxosI81j1VBQQo1yTnp7TBKJR
      Yv4AmhcR5rHK8SLCPGoarxPsUdN4AvCoaTwBeNQ0ngA8ahpPAB41jScAj5rGE4BHTeMJwKOm
      8QTgUdN4AvCoaTwBeNQ0ngA8ahpPAB41jScAj5qmoogwaRc52XeauoYmwrqB7kWEeaxyKtsj
      bHyCYslEzKYZmMx5EWEeq57K9ggr5ujtHyQcixMLBNBCES8izGNV40WEedQ0XifYo6bxBOBR
      03gC8KhpPAF41DSeADxqmoomwi6FUgrXdauRlYfHFaUqw6CXYiHDo1JKNO3yFdE5E4UQSypr
      oeUtJM2VvLZqlleta1uo3fOVJ6UEqIrdi7m2ZRWAUmreG7Qay7rWy7vSZcH8Qqpmea8tqyp9
      AKVcTvWcpGhd2Ax6/UWZpjmny0Rqapzp1CyTYyMUTIdkMonrmAwOjSDPpp+ZmUFJl5mZ1EXn
      m6USCAFKMTk2QjpbYHR4EMtx6D/dj2WWGB4do1KpS9fCsuXcxxyT/oEhzGKO0YlpsukkY5Mz
      zEyNM5svzZv3bGqKsamZCz5TSs1pY8kszfGAKM4MD5AvmgwPDWFZ5+zJMzo+dVEeuXSSwZGx
      eV1WSiXzorKUdOk/fRrLKjE0MkapMMvQ6Di5TJLp1Oxl88tmUliOJJlMXnTMsS1cWX4gc+kk
      Y5NJUlPjZPIlxkYGyRZMksmZOXKdByUpmdach1zbpH9wmFIhy5mJ6er0AVA24WgDo0P9+DQI
      x+KkMzmiIQP0ALOpSSQamuZHSpeWlkbS2RI+VSLRuhlfMERyYhJfwE9+dBCFjlPKMjU2TiDe
      QGs8zPhwP6ViC2MzOWZTU0SiCbKWiWYVKJkOUg+wY1s7wVCYqfF+fKFmBvsHqY8YdPcN01gf
      IFeyiYV8C74s15xlYFKxtt5HrpgjV3CJh3VcPURDXZiAZtM7NEnEJxCxZgrJSUxdoLJF6ra0
      XzbvsTNjRJvWMTrUjx6MkJqawpAWTnwdYWeWQChKcmYG3fCjCRdhhIiHdGwRoDibon1bB6FQ
      lIG+bpqbmxgeTxHUXfoGxogGNGyaee2V5gsW8YBicHQMu2QRi+ggfMzOZojVxZlJzuAPRXCL
      GcL1zQi7SCAYJFOCLesaiEYMTpwcpKk+xGxJ4RbzjNs6mpI0JeoueZ2p1DRatsDA4DBb2wso
      X4T8zBTBaIhS0SSbK7F15w6EL0AhOY6p+5G5URrq4sxMT+K4isbGhgV/ZwAol+nJMWKJRrLJ
      NCUXYkGFNCI0xEL4sTg1PEXYJ6o3CjQ+OgzC5cjhLkZGR5FCp+fEUc6MTxKrbybREKOUz6Os
      Ej29PfQPjiKNIJGAQd/JbgLhKNlUEoRBcmoC4Y8QCoUJ+8sajTc2MTo+TUNE0NfTS39PH4mW
      RrLZEr5AhOZYCFtJTp7sIRKLk5oeR9klTo+lqQtpTCUzGPrCL1dJl+GhUcxCmhPHeyhJjVjI
      T/eJLs5MJMnNTDCWsQhpDulcgaHek2j+MMXcLLaav5z6RIKpyTGOHznK+MQklmmh+f3omsOR
      Q0cYn0wRb2ogURfGcaCYz3Oyu4vRsUnCdXXo0qH7ZC/xeJyJiSnsQorxmSJBnySVLfL6Frxt
      5jkzlSI9OUrf6X6S6SxWLsnRE72ksiUa6uuJBP2gaeRnZ+jq6mJyYox4UytOcZa+4RniEYOp
      mQzJsSFKSkOaBYrm5Qc/jECEzPQYDc3NDA+covf0IIFImGI2h6772LC2lZJVYuhUD/hCFPMZ
      HAnd3T2EQiFmpsbJ5IoL/t4AJsZGsR2L3p4TDI1nCPmDnDzRxdhkkuzMOBOzNkHNIZ0vVqcP
      oJTCcRwMw8B1XTRNQ0p5vio91zFRSiGlRNc0XCnRdR0hwHEcQEMIhaZpOE45D6UUumEgONc8
      KJt6rrMjhEBKF4SGdrYsx3EQmgaqnNe5To+UCt3QWWhL89zIlq5rOO5ZWwElJQqBEAr37OdS
      KYRSSEATAiE0NG2+Tm35mkHiOjYlSxKLhnGlBKUQ2qvXVC6Tcvln76cAbMdB03SUkmiauMAe
      43WdWCldpARdF+Xr0QRKCZR00XSDc62ec/cTKUHT0IQGSuK85j4Kocr3U9dQCPTLdDzPfW8C
      kEqe/66Ukij16rMhXRcJ6EKAEBc8R5quX7aMi+6t46Dp+vk8ys+JhNd9b6r8vXl+zB61izcR
      5lHTeALwWHUo5ZLN5jGLeUz74j6IbZq46rXpJbPZHGYxz/RM+oKRtuqMAnl4XEFce4YvfvEx
      btqqU1qzj6gq0toYZzKdZajnGPXhCKp5E7fdeB3Dfd1Mjg4x6iToiOXJu35G65uRjsPEaJ9X
      A3isTup8GiUMTp08TiE9zTMvHiM7PUOgsZF4NIKemyFpQv/IGNnBE+zatQuhacRiEUZO9/Dj
      Z57BDia8TrDH6kNJm/xsHgeB7vORnE7S1JAAwHVKlCyIRIIEwhHSk6No/jCRWBynkGYyXWT9
      mnrGJmZobop7AvCobf4/T/+N1kA7zkUAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
